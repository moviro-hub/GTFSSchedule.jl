var documenterSearchIndex = {"docs":
[{"location":"api/#API-Reference","page":"API Reference","title":"API Reference","text":"","category":"section"},{"location":"api/","page":"API Reference","title":"API Reference","text":"Complete API documentation for GTFSSchedules.jl functions and types.","category":"page"},{"location":"api/#Main-Functions","page":"API Reference","title":"Main Functions","text":"","category":"section"},{"location":"api/#GTFSSchedules.read_gtfs","page":"API Reference","title":"GTFSSchedules.read_gtfs","text":"read_gtfs(filepath::String) -> GTFSSchedule\n\nRead a GTFS Schedule feed from a ZIP file or directory.\n\nArguments\n\nfilepath::String: Path to the GTFS ZIP file or directory containing GTFS files\n\nReturns\n\nGTFSSchedule: Dictionary mapping table names (as Symbols) to DataFrames\n\nExample\n\nfeed = read_gtfs(\"path/to/transit_feed.zip\")\nprintln(\"Number of agencies: \", nrow(feed[:agency]))\n\nThrows\n\nArgumentError: If the file/directory doesn't exist or is not a valid GTFS source\n\n\n\n\n\n","category":"function"},{"location":"api/#Validation-Functions","page":"API Reference","title":"Validation Functions","text":"","category":"section"},{"location":"api/#GTFSSchedules.Validations.validate_gtfs","page":"API Reference","title":"GTFSSchedules.Validations.validate_gtfs","text":"validate_gtfs(gtfs_feed::GTFSSchedule) -> ValidationResult\n\nHigh-performance GTFS validation using vectorized operations and single-pass processing. This is the main validation function that provides 3-5x better performance than the original.\n\nArguments\n\ngtfs_feed::GTFSSchedule: The GTFS feed to validate\n\nReturns\n\nValidationResult: Combined validation results from all validators\n\nExamples\n\nusing GTFSSchedules\n\ngtfs = read_gtfs(\"path/to/gtfs\")\nresult = GTFS.Validations.validate_gtfs(gtfs)\nGTFS.Validations.print_validation_results(result)\n\nif GTFS.Validations.has_validation_errors(result)\n    println(\"Validation failed!\")\nelse\n    println(\"All validations passed!\")\nend\n\n\n\n\n\n","category":"function"},{"location":"api/#GTFSSchedules.Validations.print_validation_results","page":"API Reference","title":"GTFSSchedules.Validations.print_validation_results","text":"print_validation_results(result::ValidationResult)\n\nPrint validation results in a formatted, human-readable format.\n\nArguments\n\nresult::ValidationResult: The validation result to print\n\nExample\n\nresult = GTFSSchedules.Validations.validate_gtfs(gtfs)\nGTFSSchedules.Validations.print_validation_results(result)\n\n\n\n\n\n","category":"function"},{"location":"api/#GTFSSchedules.Validations.has_validation_errors","page":"API Reference","title":"GTFSSchedules.Validations.has_validation_errors","text":"has_validation_errors(result::ValidationResult) -> Bool\n\nCheck if a validation result contains any errors.\n\nArguments\n\nresult::ValidationResult: The validation result to check\n\nReturns\n\nBool: true if there are validation errors, false otherwise\n\nExample\n\nresult = GTFSSchedules.Validations.validate_gtfs(gtfs)\nif GTFSSchedules.Validations.has_validation_errors(result)\n    println(\"Feed has validation errors\")\nend\n\n\n\n\n\n","category":"function"},{"location":"api/#Types","page":"API Reference","title":"Types","text":"","category":"section"},{"location":"api/#GTFSSchedules.Validations.ValidationResult","page":"API Reference","title":"GTFSSchedules.Validations.ValidationResult","text":"ValidationResult\n\nResult of GTFS validation containing errors and warnings.\n\nFields\n\nmessages::Vector{ValidationMessage}: List of validation messages\nsummary::String: Summary of validation results\n\n\n\n\n\n","category":"type"},{"location":"api/#GTFSSchedules.Validations.ValidationMessage","page":"API Reference","title":"GTFSSchedules.Validations.ValidationMessage","text":"ValidationMessage\n\nRepresents a specific validation message with context.\n\nFields\n\ntable::Symbol: Name of the GTFS table where the message occurred\nfield::Union{Symbol, Nothing}: Name of the field (if applicable)\nmessage::String: Message text\nseverity::Symbol: Message severity (:error, :warning, or :info)\n\n\n\n\n\n","category":"type"},{"location":"api/#Data-Structures","page":"API Reference","title":"Data Structures","text":"","category":"section"},{"location":"api/","page":"API Reference","title":"API Reference","text":"GTFSSchedule is a type alias for Dict{Symbol, Union{DataFrames.DataFrame, Nothing}} that stores GTFS data tables.","category":"page"},{"location":"api/","page":"API Reference","title":"API Reference","text":"The GTFS data is accessed using Symbol keys corresponding to the table names:","category":"page"},{"location":"api/","page":"API Reference","title":"API Reference","text":":agency - Transit agencies\n:stops - Transit stops\n:routes - Transit routes\n:trips - Trip information\n:stop_times - Stop times for trips\n:calendar - Service calendar (optional)\n:calendar_dates - Service calendar exceptions (optional)\n:fare_attributes - Fare information (optional)\n:fare_rules - Fare rules (optional)\n:shapes - Route shapes (optional)\n:frequencies - Frequency-based service (optional)\n:transfers - Transfer information (optional)\n:feed_info - Feed metadata (optional)","category":"page"},{"location":"examples/#Examples","page":"Examples","title":"Examples","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"Essential examples for reading and validating GTFS data.","category":"page"},{"location":"examples/#Reading-GTFS-Data","page":"Examples","title":"Reading GTFS Data","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"using GTFSSchedules\nusing DataFrames\n\n# Read from ZIP file (matches README)\ngtfs = read_gtfs(\"./test/example/sample-feed-1.zip\")\n\n# Read from directory\ngtfs = read_gtfs(\"/path/to/unzipped/gtfs/\")","category":"page"},{"location":"examples/#Basic-Data-Access","page":"Examples","title":"Basic Data Access","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"# Access tables as DataFrames\nprintln(\"Agencies: \", nrow(gtfs[:agency]))\nprintln(\"Stops: \", nrow(gtfs[:stops]))\nprintln(\"Routes: \", nrow(gtfs[:routes]))\n\n# Filter data\nbus_routes = filter(row -> row.route_type == 3, gtfs[:routes])\nprintln(\"Bus routes: \", nrow(bus_routes))","category":"page"},{"location":"examples/#Validation","page":"Examples","title":"Validation","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"# Validate the feed\nresult = GTFSSchedules.Validations.validate_gtfs(gtfs)\n\n# Check results\nif !GTFSSchedules.Validations.has_validation_errors(result)\n    println(\"✓ Feed is valid!\")\nelse\n    println(\"✗ Issues found: \", result.summary)\n    GTFSSchedules.Validations.print_validation_results(result)\nend","category":"page"},{"location":"#GTFSSchedules.jl","page":"Home","title":"GTFSSchedules.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"A Julia package for reading and validating GTFS (General Transit Feed Specification) schedule data.","category":"page"},{"location":"","page":"Home","title":"Home","text":"GTFS is the standard format for public transit data used by Google Maps, transit apps, and planning tools. This package provides a Julia implementation for reading GTFS schedule data and validating them. The validation largely uses rules generated from the official GTFS specification. The generation pipeline is included in this repository, making it easy to update rules when the specification changes.","category":"page"},{"location":"#Key-Features","page":"Home","title":"Key Features","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Complete GTFS Support: Read GTFS schedule data from ZIP files and directories. The reader makes few assumptions about the data and therefore tolerates non‑conforming input.\nComprehensive Validation: Built-in validation against official GTFS rules with detailed error reporting. Validation aims to cover all rules in the specification.","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"using Pkg\nPkg.add(url=\"https://github.com/moviro-hub/GTFSSchedules.jl.git\")","category":"page"},{"location":"#Quick-Start","page":"Home","title":"Quick Start","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"using GTFSSchedules\nusing DataFrames\n\n# Read GTFS schedule data from a ZIP file\ngtfs = read_gtfs(\"./test/example/sample-feed-1.zip\")\n\n# Access data using DataFrames\nprintln(\"Number of agencies: \", nrow(gtfs[:agency]))\n\n# Validate the schedule data\nresult = GTFSSchedules.Validations.validate_gtfs(gtfs)\nif !GTFSSchedules.Validations.has_validation_errors(result)\n    println(\"✓ Schedule data is valid!\")\nelse\n    println(\"✗ Issues found: \", result.summary)\nend\n\n# Print one individual message\nif length(result.messages) > 0\n    println(result.messages[1].message)\nelse\n    println(\"No errors found\")\nend","category":"page"}]
}
